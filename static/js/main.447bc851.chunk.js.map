{"version":3,"sources":["App.js","index.js"],"names":["Board","react_default","a","createElement","class","Puzzle","i","props","id","concat","value","App","className","randomImages","divs","Array","from","document","querySelectorAll","length","j","Math","floor","random","_ref","shuffle","count","r","c","first","getBoundingClientRect","style","last","deltaY","top","deltaX","left","animate","transform","duration","easing","fill","ReactDOM","render","src_App","getElementById","querySelector","addEventListener","e","target","tagName","elm","parentNode","getComputedStyle","Number","console","log","window","onload"],"mappings":"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","file":"static/js/main.447bc851.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Board />\n    </div>\n  );\n}\n\nfunction Board() {\n  return (\n    <div class=\"Board-container\">\n      <div class=\"ghost\"></div>\n      <div class=\"ghost\"></div>\n      <div class=\"ghost\"></div>\n      <div class=\"ghost\"></div>\n      <div class=\"ghost\"></div>\n\n      <Puzzle i='1' />\n      <Puzzle i='2' />\n      <Puzzle i='3' />\n      <Puzzle i='4' />\n\n\n    </div>\n  );\n}\n\nfunction Puzzle(props) {\n\n  return (\n    <div id={`image${props.i}`} class=\"puzzle\">\n      <div class=\"top\">\n        <button value=\"up\">^</button>\n      </div>\n      <div class=\"middle\">\n        <button value=\"left\">&lt;</button>\n        <button value=\"right\">></button>\n      </div>\n      <div class=\"bottom\">\n        <button value=\"down\">v</button>\n      </div>\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\ndocument.querySelector('.Board-container').addEventListener('click', (e) => {\n    if (e.target.tagName === 'BUTTON') {\n        // https://css-tricks.com/animating-layouts-with-the-flip-technique/\n        const elm = e.target.parentNode.parentNode;\n        const style = getComputedStyle(elm);\n        const first = elm.getBoundingClientRect();\n\n        switch (e.target.value) {\n            case 'down': {\n                elm.style['grid-row-start'] = Number(style['grid-row-start']) + 1;\n                break;\n            }\n            case 'up': {\n                elm.style['grid-row-start'] = Number(style['grid-row-start']) - 1;\n                break;\n            }\n            case 'right': {\n                elm.style['grid-column-start'] = Number(style['grid-column-start']) + 1;\n                break;\n            }\n            case 'left': {\n                elm.style['grid-column-start'] = Number(style['grid-column-start']) - 1;\n                break;\n            }\n            default : {\n\n            }\n        }\n        const last = elm.getBoundingClientRect();\n        const deltaX = first.left - last.left;\n        const deltaY = first.top - last.top;\n        console.log(deltaY, deltaX);\n        elm.animate(\n            // keyframes\n            [\n                { transform: `translate(${deltaX}px, ${deltaY}px)` },\n                { transform: 'none' }],\n            // timing options\n            {\n                duration: 300,\n                easing: `ease-in-out`\n            });\n    } else {\n        randomImages();\n    }\n});\n\nfunction randomImages() {\n    const divs = Array.from(document.querySelectorAll('.Board-container>div'));\n    shuffle(divs);\n    let count = 0\n    for (let r = 1; r <= 3; r++) {\n        for (let c = 1; c <= 3; c++) {\n            const first = divs[count].getBoundingClientRect();\n            divs[count].style['grid-row-start'] = r;\n            divs[count].style['grid-column-start'] = c;\n            const last = divs[count].getBoundingClientRect();\n            const deltaY = first.top - last.top;\n            const deltaX = first.left - last.left;\n\n            divs[count].animate(\n                // keyframes\n                [\n                    { transform: `translate(${deltaX}px, ${deltaY}px)` },\n                    { transform: 'none' }],\n                // timing options\n                {\n                    duration: 300,\n                    easing: 'ease-in-out',\n                    fill: 'both'\n                });\n            count++;\n        }\n    }\n}\n\n\nfunction shuffle(a) {\n    for (let i = 0; i < a.length; i++) {\n        const j = Math.floor(Math.random() * a.length); //random index j\n        [a[i], a[j]] = [a[j], a[i]]; //switch\n    }\n    return a;\n}\n\nwindow.onload = randomImages();"],"sourceRoot":""}